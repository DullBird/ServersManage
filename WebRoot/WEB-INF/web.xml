<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name></display-name>
	<!-- 定义log4j保存的项目路径 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>ServersManage.webApp.root</param-value>
	</context-param>
	<!-- 定义log4j的配置文件 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<!--Spring默认刷新Log4j配置文件的间隔,单位为millisecond -->
	<context-param>     
        <param-name>log4jRefreshInterval</param-name>     
        <param-value>6000</param-value>     
    </context-param>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/spring/spring-base.xml</param-value>
	</context-param>
	
	<!-- 监听器 -->
	
	<!-- Spring 负责处理由JavaBeans Introspector的使用而引起的缓冲泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<!-- spring 容器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- spring 日志 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	<!-- 过滤器 -->
	
	<!-- 装饰器 -->
	<filter>
		<filter-name>sitemesh</filter-name>
		<filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
	</filter> 
	<!-- 编码 -->
	<filter>  
	    <filter-name>characterEncodingFilter</filter-name>  
	    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
	    <init-param>  
	        <param-name>encoding</param-name>  
	        <param-value>UTF-8</param-value>  
	    </init-param>  
	    <init-param>  
	        <param-name>forceEncoding</param-name>  
	        <param-value>true</param-value>  
	    </init-param>  
	</filter>
	<!-- 系统过滤器 -->
	<filter>
		<filter-name>permissionFilter</filter-name>
		<filter-class>com.server.utils.filter.PermissionFilter</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>permissionFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>sitemesh</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> 
	
	<!-- servlet -->
	<servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:/spring/spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <!-- servlet-mapping -->
    
    <!-- 使用tomcat自带的default servlet处理以下后缀的静态文件，以免被spring mvc处理导致访问不了 -->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.js</url-pattern>
        <url-pattern>*.css</url-pattern>
        <url-pattern>*.jpg</url-pattern>
        <url-pattern>*.jpeg</url-pattern>
        <url-pattern>*.png</url-pattern>
        <url-pattern>*.gif</url-pattern>
        <url-pattern>*.html</url-pattern>
        <url-pattern>*.xls</url-pattern>
        <url-pattern>*.xlsx</url-pattern>
        <url-pattern>*.doc</url-pattern>
        <url-pattern>*.woff</url-pattern>
        <url-pattern>*.ttf</url-pattern>
    </servlet-mapping>
    
    <!-- springMVC servlet-mapping -->
	<servlet-mapping>
		<servlet-name>springMVC</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
